{"version":3,"sources":["store/selectors.ts","api/api.ts","store/actions.ts","components/Loader/Loader.tsx","components/MovieCard/MovieCard.tsx","components/FindMovie/FindMovie.tsx","components/NewMoviesList/NewMoviesList.tsx","components/AdminAddMovie/AdminAddMovie.tsx","components/HomePage/HomePage.tsx","components/LoginForm/LoginForm.tsx","components/MovieList/MovieList.tsx","components/Nav/Nav.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","components/EditMovie/EditMovie.tsx","components/EditPage/EditPage.tsx","App.tsx","store/index.ts","index.tsx"],"names":["getUser","state","user","getNewMovies","newMovies","getMoviesList","moviesList","URL_BASE","getFilm","title","a","fetch","response","json","Error","SET_USER","SET_NEW_MOVIE","CLEAR_NEW_MOVIE","SET_MOVIES_LIST","setUser","payloud","type","setMoviesList","Loader","className","MovieCard","movie","useState","description","setDescription","length","newDescription","slice","split","join","Card","CardMedia","component","height","image","imgUrl","alt","CardContent","Typography","gutterBottom","variant","sx","color","FindMovie","dispatch","useDispatch","name","setName","isLoading","setLoading","setMovie","isError","setError","listMovies","useSelector","loadMovie","film","Response","Title","Plot","Poster","imdbId","imdbID","handlerFind","TextField","error","id","label","onChange","event","currentTarget","value","Button","onClick","every","movieAdd","movies","JSON","parse","localStorage","getItem","filteredNewMovies","filter","newMovie","item","setItem","stringify","NewMoviesList","map","AdminAddMovie","role","HomePage","src","LoginForm","navigate","useNavigate","isVisiblePassword","setVisiblePassword","login","password","values","setValues","handleChange","key","target","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","logInUser","find","userFind","toLowerCase","MovieList","setMovies","useEffect","moviesFromLocal","Nav","to","Profile","oldPass","newPass","errorOldPass","errorNewPass","viewOldPass","viewNewPass","message","setMessage","errorMessage","setErrorMessage","handleClickShowPassword","prevValue","handleMouseDownPassword","newUsers","userProfile","changePass","Register","errors","setErrors","m","minWidth","Select","labelId","MenuItem","users","trim","some","isUserRegistered","isValid","newUser","addUser","EditMovie","editedMovies","editMovie","deleteMovie","EditPage","moviesLocal","admin","App","moviesFromServer","path","element","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8258951.chunk.js","sourcesContent":["export const getUser = (state: RootState) => state.user;\nexport const getNewMovies = (state: RootState) => state.newMovies;\nexport const getMoviesList = (state: RootState) => state.moviesList;\n","const URL_BASE = 'https://www.omdbapi.com?i=tt3896198&apikey=fa576852';\n\nexport async function getFilm(title: string) {\n  try {\n    const response = await fetch(`${URL_BASE}&t=${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error('error');\n  }\n}\n","export const SET_USER = 'SET_USER';\nexport const SET_NEW_MOVIE = 'SET_NEW_MOVIE';\nexport const CLEAR_NEW_MOVIE = 'CLEAR_NEW_MOVIE';\nexport const SET_MOVIES_LIST = 'SET_MOVIES_LIST';\n\nexport const setUser = (payloud: User | null = null) => ({ type: SET_USER, payloud });\nexport const setNewMovie = (payloud: Movie) => ({ type: SET_NEW_MOVIE, payloud });\nexport const clearNewMovie = () => ({ type: CLEAR_NEW_MOVIE });\nexport const setMoviesList = (payloud: Movie[]) => ({ type: SET_MOVIES_LIST, payloud });\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\n\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const [description, setDescription] = useState(movie.description);\n\n  if (description.length > 300) {\n    const newDescription = description.slice(0, 297).split(' ').slice().join(' ');\n\n    setDescription(`${newDescription}...`);\n  }\n\n  return (\n    <Card className=\"MovieCard\">\n      <CardMedia\n        component=\"img\"\n        height=\"140\"\n        image={movie.imgUrl}\n        alt={movie.title}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {movie.title}\n        </Typography>\n        <Typography sx={{ height: 115 }} variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n","import { Button, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilm } from '../../api/api';\nimport { clearNewMovie, setNewMovie } from '../../store/actions';\nimport { getNewMovies } from '../../store/selectors';\nimport { Loader } from '../Loader';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nexport const FindMovie: React.FC = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState(false);\n  const listMovies = useSelector(getNewMovies);\n\n  const loadMovie = async () => {\n    const film = await getFilm(name);\n\n    if (film.Response === 'True') {\n      setMovie({\n        title: film.Title,\n        description: film.Plot,\n        imgUrl: film.Poster,\n        imdbId: film.imdbID,\n      });\n      setError(false);\n    } else {\n      setMovie(null);\n      setError(true);\n    }\n  };\n\n  const isAdded = () => {\n    return listMovies.every(movieAdd => (movieAdd.imdbId !== movie?.imdbId));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.currentTarget.value);\n    setError(false);\n  };\n\n  const handlerFind = async () => {\n    setLoading(true);\n    await loadMovie();\n\n    setLoading(false);\n  };\n\n  const handlerAdd = () => {\n    if (movie && isAdded()) {\n      dispatch(setNewMovie(movie));\n    }\n\n    setError(false);\n    setName('');\n    setMovie(null);\n  };\n\n  const handlerSave = () => {\n    const movies: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n    const filteredNewMovies = listMovies.filter(newMovie => {\n      return movies.every(item => (newMovie.imdbId !== item.imdbId));\n    });\n\n    localStorage.setItem('movies', JSON.stringify([...movies, ...filteredNewMovies]));\n    dispatch(clearNewMovie());\n  };\n\n  return (\n    <div className=\"FindMovie\">\n      <h1 className=\"FindMovie__title\">Search movie</h1>\n      <form className=\"FindMovie__form\">\n        <TextField\n          error={isError}\n          className=\"FindMovie__input\"\n          id=\"standard-name\"\n          label=\"Movie name\"\n          onChange={handleChange}\n          value={name}\n          variant=\"standard\"\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handlerFind}\n        >\n          Find movie\n        </Button>\n        {\n          isError\n            && (\n              <span className=\"FindMovie__error\">\n                Can&apos;t find movie\n              </span>\n            )\n        }\n        {\n          movie\n          && (\n            <Button\n              variant=\"contained\"\n              onClick={handlerAdd}\n            >\n              Add to list\n            </Button>\n          )\n        }\n      </form>\n      {\n        isLoading && <Loader />\n      }\n      {\n        movie && <MovieCard movie={movie} />\n      }\n      {\n        !!listMovies.length\n        && (\n          <Button\n            variant=\"contained\"\n            onClick={handlerSave}\n          >\n            Save\n          </Button>\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport './NewMoviesList.scss';\nimport { useSelector } from 'react-redux';\nimport { MovieCard } from '../MovieCard';\nimport { getNewMovies } from '../../store/selectors';\n\nexport const NewMoviesList: React.FC = () => {\n  const movies = useSelector(getNewMovies);\n\n  return (\n    <ul className=\"NewMoviesList\">\n      {movies.map(movie => (\n        <li key={movie.imdbId} className=\"NewMoviesList__item\">\n          <MovieCard movie={movie} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUser } from '../../store/selectors';\nimport { FindMovie } from '../FindMovie';\nimport { NewMoviesList } from '../NewMoviesList';\nimport './AdminAddMovie.scss';\n\nexport const AdminAddMovie: React.FC = () => {\n  const user = useSelector(getUser);\n\n  if (user?.role !== 'admin') {\n    return (\n      <span>Please log in</span>\n    );\n  }\n\n  return (\n    <div className=\"AdminAddMovie\">\n      <div className=\"AdminAddMovie__page-content\">\n        <NewMoviesList />\n      </div>\n      <div className=\"AdminAddMovie__sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1>Information about cinema</h1>\n      <img\n        className=\"HomePage__img\"\n        src=\"https://d7uqkdchk37sx.cloudfront.net/wp-content/uploads/2018/10/cinema.jpg\"\n        alt=\"Cinema\"\n      />\n    </div>\n  );\n};\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  TextField,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUser } from '../../store/actions';\nimport './LoginForm.scss';\n\nexport const LoginForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [isVisiblePassword, setVisiblePassword] = useState(false);\n  const [isError, setError] = useState(false);\n  const [values, setValues] = useState<logPass>({\n    login: '',\n    password: '',\n  });\n  const dispatch = useDispatch();\n\n  const handlerLogIn = () => {\n    const users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\n    const logInUser = users.find(userFind => {\n      if (userFind.login === values.login.toLowerCase()\n        && userFind.password === values.password) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (logInUser) {\n      dispatch(setUser(logInUser));\n      setError(false);\n      navigate('/movie_list');\n    } else {\n      setError(true);\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setVisiblePassword(!isVisiblePassword);\n  };\n\n  const handleChange = (key: keyof logPass) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"LoginForm\">\n      <form className=\"LoginForm__form\">\n        <TextField\n          error={isError}\n          className=\"LoginForm__input\"\n          id=\"standard-required\"\n          label=\"Login\"\n          onChange={handleChange('login')}\n          value={values.login}\n          variant=\"standard\"\n        />\n        <FormControl\n          variant=\"standard\"\n          className=\"LoginForm__password\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n          <Input\n            id=\"standard-adornment-password\"\n            error={isError}\n            type={isVisiblePassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {isVisiblePassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )}\n          />\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          onClick={handlerLogIn}\n        >\n          Log in\n        </Button>\n      </form>\n      {\n        isError\n        && <span className=\"LoginForm__error\">Can&apos;t find user</span>\n      }\n\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { MovieCard } from '../MovieCard';\nimport './MovieList.scss';\n\nexport const MovieList: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    const moviesFromLocal: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n\n    setMovies(moviesFromLocal);\n  }, []);\n\n  return (\n    <div className=\"MovieList\">\n      <ul className=\"MovieList__list\">\n        {\n          movies.map(movie => (\n            <li key={movie.imdbId} className=\"MovieList__item\">\n              <MovieCard movie={movie} />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getUser } from '../../store/selectors';\nimport './Nav.scss';\n\nexport const Nav: React.FC = () => {\n  const user = useSelector(getUser);\n\n  return (\n    <div className=\"Nav\">\n      <NavLink to=\"/\" className=\"Nav__link\">\n        Home\n      </NavLink>\n      <NavLink to=\"/movie_list\" className=\"Nav__link\">\n        Movie list\n      </NavLink>\n      {\n        !user\n          ? (\n            <>\n              <NavLink to=\"/login\" className=\"Nav__link\">\n                Log in\n              </NavLink>\n              <NavLink to=\"/register\" className=\"Nav__link\">\n                Register\n              </NavLink>\n            </>\n          )\n          : (\n            <NavLink to=\"/profile\" className=\"Nav__link\">\n              Profile\n            </NavLink>\n          )\n      }\n      {\n        user?.role === 'admin'\n          && (\n            <>\n              <NavLink to=\"/add_movie\" className=\"Nav__link\">\n                Add movie\n              </NavLink>\n              <NavLink to=\"/edit_movie_list\" className=\"Nav__link\">\n                Edit list\n              </NavLink>\n            </>\n          )\n      }\n    </div>\n  );\n};\n","import { VisibilityOff, Visibility } from '@mui/icons-material';\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  IconButton,\n  Button,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUser } from '../../store/actions';\nimport { getUser } from '../../store/selectors';\nimport './Profile.scss';\n\nexport const Profile: React.FC = () => {\n  const navigate = useNavigate();\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n  const [values, setValues] = useState<newPass>({\n    oldPass: '',\n    newPass: '',\n    errorOldPass: false,\n    errorNewPass: false,\n    viewOldPass: false,\n    viewNewPass: false,\n  });\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const isValid = () => {\n    if (values.oldPass !== user?.password) {\n      setErrorMessage('Incorect old password');\n      setValues(prevValue => ({ ...prevValue, errorOldPass: true }));\n\n      return false;\n    }\n\n    if (values.newPass.length < 8) {\n      setErrorMessage('Password must be longer than 8 chars');\n      setValues(prevValue => ({ ...prevValue, errorNewPass: true }));\n\n      return false;\n    }\n\n    if (values.newPass === user?.password) {\n      setErrorMessage('New password same');\n      setValues(prevValue => ({ ...prevValue, errorNewPass: true }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const setGoodMessage = () => {\n    setMessage('Your password was change');\n  };\n\n  const changePass = () => {\n    const users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\n    const newUsers = users.map(userProfile => {\n      if (userProfile.login === user?.login\n        && userProfile.password === user?.password) {\n        dispatch(setUser({\n          ...user,\n          password: values.newPass,\n        }));\n\n        return {\n          ...user,\n          password: values.newPass,\n        };\n      }\n\n      return userProfile;\n    });\n\n    localStorage.setItem('users', JSON.stringify(newUsers));\n  };\n\n  const resetInputs = () => {\n    setValues({\n      oldPass: '',\n      newPass: '',\n      errorOldPass: false,\n      errorNewPass: false,\n      viewOldPass: false,\n      viewNewPass: false,\n    });\n  };\n\n  const handleClickShowPassword = (key: keyof newPass) => () => {\n    setValues(prevValue => ({\n      ...prevValue,\n      [key]: !prevValue[key],\n      errorNewPass: false,\n      errorOldPass: false,\n    }));\n    setMessage('');\n    setErrorMessage('');\n  };\n\n  const handleChange = (key: keyof newPass) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [key]: event.target.value,\n      errorNewPass: false,\n      errorOldPass: false,\n    });\n    setMessage('');\n    setErrorMessage('');\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  const handlerSubmit = () => {\n    if (isValid()) {\n      resetInputs();\n      setGoodMessage();\n      changePass();\n    }\n  };\n\n  const handlerLogOut = () => {\n    dispatch(setUser(null));\n  };\n\n  if (!user) {\n    navigate('/login');\n\n    return (\n      <div className=\"Profile\">\n        <h1>Please log in</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Profile\">\n      <h1>Profile</h1>\n      <div className=\"Profile__container\">\n        <h3>{user.name}</h3>\n        <Button\n          className=\"Profile__logout\"\n          variant=\"contained\"\n          onClick={handlerLogOut}\n        >\n          Log out\n        </Button>\n      </div>\n      <form className=\"Profile__form\">\n        <h3>Change password</h3>\n\n        <FormControl\n          variant=\"standard\"\n          className=\"Profile__password\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-old-password\">Old password</InputLabel>\n          <Input\n            id=\"standard-adornment-old-password\"\n            error={values.errorOldPass}\n            type={values.viewOldPass ? 'text' : 'password'}\n            value={values.oldPass}\n            onChange={handleChange('oldPass')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword('viewOldPass')}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.viewOldPass ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )}\n          />\n        </FormControl>\n        <FormControl\n          variant=\"standard\"\n          className=\"Profile__password\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-new-password\">New password</InputLabel>\n          <Input\n            id=\"standard-adornment-new-password\"\n            error={values.errorNewPass}\n            type={values.viewNewPass ? 'text' : 'password'}\n            value={values.newPass}\n            onChange={handleChange('newPass')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword('viewNewPass')}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.viewNewPass ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )}\n          />\n        </FormControl>\n        <Button\n          variant=\"contained\"\n          onClick={handlerSubmit}\n        >\n          Save\n        </Button>\n        <span className=\"Profile__error\">{errorMessage}</span>\n        <span className=\"Profile__message\">{message}</span>\n      </form>\n    </div>\n  );\n};\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport './Register.scss';\n\nexport const Register: React.FC = () => {\n  const [isVisiblePassword, setVisiblePassword] = useState(false);\n  const [values, setValues] = useState<User>({\n    name: '',\n    login: '',\n    password: '',\n    role: '',\n  });\n  const [errors, setErrors] = useState({\n    login: false,\n    password: false,\n    name: false,\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [message, setMessage] = useState('');\n\n  const isUserRegistered = (login: string, users: User[]) => {\n    return users.some(user => (user.login === login.toLowerCase()));\n  };\n\n  const addUser = (users: User[]) => {\n    const newUser = {\n      name: values.name,\n      login: values.login.toLowerCase(),\n      password: values.password,\n      role: values.role,\n    };\n\n    localStorage.setItem('users', JSON.stringify([...users, newUser]));\n  };\n\n  const resetInputs = () => {\n    setValues({\n      name: '',\n      login: '',\n      password: '',\n      role: '',\n    });\n    setErrorMessage('');\n    setErrors({\n      login: false,\n      password: false,\n      name: false,\n    });\n  };\n\n  const isValid = (users: User[]) => {\n    if (values.name.trim().length < 3) {\n      setErrors({ ...errors, name: true });\n      setErrorMessage('Type name longer than 3 chars');\n\n      return false;\n    }\n\n    if (values.login.trim().length < 3) {\n      setErrors({ ...errors, login: true });\n      setErrorMessage('Type login longer than 3 chars');\n\n      return false;\n    }\n\n    if (isUserRegistered(values.login, users)) {\n      setErrorMessage('Login already used');\n\n      return false;\n    }\n\n    if (values.password.length < 8) {\n      setErrorMessage('Password must be longer than 8 chars');\n\n      return false;\n    }\n\n    if (values.role === '') {\n      setErrorMessage('Please select role');\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleClickShowPassword = () => {\n    setVisiblePassword(!isVisiblePassword);\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (key: keyof User) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n\n  const handleSelect = (event: SelectChangeEvent) => {\n    setValues({ ...values, role: event.target.value });\n  };\n\n  const handlerSubmit = () => {\n    const users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\n\n    if (isValid(users)) {\n      addUser(users);\n      resetInputs();\n      setMessage('New user was created');\n    }\n  };\n\n  return (\n    <div className=\"Register\">\n      <form className=\"Register__form\">\n        <TextField\n          error={errors.name}\n          className=\"Register__input\"\n          id=\"standard-name\"\n          label=\"Name\"\n          onChange={handleChange('name')}\n          value={values.name}\n          variant=\"standard\"\n        />\n        <TextField\n          error={errors.login}\n          className=\"Register__input\"\n          id=\"standard-login\"\n          label=\"Login\"\n          onChange={handleChange('login')}\n          value={values.login}\n          variant=\"standard\"\n        />\n        <FormControl\n          variant=\"standard\"\n          className=\"Register__password\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n          <Input\n            id=\"standard-adornment-password\"\n            error={errors.password}\n            type={isVisiblePassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {isVisiblePassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )}\n          />\n        </FormControl>\n\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n          <InputLabel id=\"simple-select\">Role</InputLabel>\n          <Select\n            labelId=\"simple-select\"\n            id=\"simple-select-role\"\n            className=\"Register__select\"\n            value={values.role}\n            onChange={handleSelect}\n            label=\"Role\"\n          >\n            <MenuItem value=\"user\">User</MenuItem>\n            <MenuItem value=\"admin\">Admin</MenuItem>\n          </Select>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          onClick={handlerSubmit}\n        >\n          Register\n        </Button>\n      </form>\n      <span className=\"Register__error\">{errorMessage}</span>\n      <span>{message}</span>\n    </div>\n  );\n};\n","import { Button, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMoviesList } from '../../store/actions';\nimport './EditMovie.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const EditMovie: React.FC<Props> = ({ movie }) => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState({\n    title: movie.title,\n    description: movie.description,\n    imgUrl: movie.imgUrl,\n  });\n\n  const handleChange = (key: keyof Movie) => (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n\n  const handlerSave = () => {\n    const movies: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n    const editedMovies = movies.map(editMovie => {\n      if (editMovie.imdbId === movie.imdbId) {\n        return {\n          title: values.title,\n          description: values.description,\n          imgUrl: values.imgUrl,\n          imdbId: movie.imdbId,\n        };\n      }\n\n      return editMovie;\n    });\n\n    dispatch(setMoviesList(editedMovies));\n    localStorage.setItem('movies', JSON.stringify(editedMovies));\n  };\n\n  const handlerDelete = () => {\n    const movies: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n\n    const editedMovies = movies.filter(deleteMovie => (deleteMovie.imdbId !== movie.imdbId));\n\n    dispatch(setMoviesList(editedMovies));\n    localStorage.setItem('movies', JSON.stringify(editedMovies));\n  };\n\n  return (\n    <section className=\"EditMovie\">\n      <form className=\"EditMovie__form\">\n        <TextField\n          className=\"EditMovie__input\"\n          id=\"standard-title\"\n          label=\"Title\"\n          onChange={handleChange('title')}\n          value={values.title}\n          variant=\"standard\"\n        />\n        <div className=\"EditMovie__description\">\n          <span>Description</span>\n          <textarea\n            className=\"EditMovie__textarea\"\n            onChange={handleChange('description')}\n            value={values.description}\n          >\n          </textarea>\n        </div>\n        <TextField\n          className=\"EditMovie__input\"\n          id=\"standard-imgUrl\"\n          label=\"Image URL\"\n          onChange={handleChange('imgUrl')}\n          value={values.imgUrl}\n          variant=\"standard\"\n        />\n      </form>\n      <div>\n        <Button\n          variant=\"contained\"\n          onClick={handlerSave}\n          className=\"EditMovie__button\"\n        >\n          Save\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handlerDelete}\n          className=\"EditMovie__button\"\n        >\n          Delete\n        </Button>\n      </div>\n    </section>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMoviesList } from '../../store/actions';\nimport { getMoviesList, getUser } from '../../store/selectors';\nimport { EditMovie } from '../EditMovie';\nimport { MovieCard } from '../MovieCard';\nimport './EditPage.scss';\n\nexport const EditPage: React.FC = () => {\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n  const movies = useSelector(getMoviesList);\n\n  useEffect(() => {\n    const moviesLocal: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n\n    dispatch(setMoviesList(moviesLocal));\n  }, []);\n\n  if (user?.role !== 'admin') {\n    return (\n      <span>Please log in</span>\n    );\n  }\n\n  return (\n    <div className=\"EditPage\">\n      <ul className=\"EditPage__list\">\n        {\n          movies.map(movie => (\n            <li key={movie.imdbId} className=\"EditPage__item\">\n              <MovieCard movie={movie} />\n              <EditMovie movie={movie} />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { AdminAddMovie } from './components/AdminAddMovie';\nimport { HomePage } from './components/HomePage';\nimport { LoginForm } from './components/LoginForm';\nimport { MovieList } from './components/MovieList';\nimport { Nav } from './components/Nav';\nimport { Profile } from './components/Profile';\nimport { Register } from './components/Register';\nimport moviesFromServer from './api/movies.json';\nimport { EditPage } from './components/EditPage';\n\nconst admin = {\n  name: 'Admin',\n  login: 'admin',\n  password: 'admin123',\n  role: 'admin',\n};\n\nconst user = {\n  name: 'User',\n  login: 'user',\n  password: 'user1234',\n  role: 'user',\n};\n\nexport const App: React.FC = () => {\n  const users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\n  const movies: Movie[] = JSON.parse(localStorage.getItem('movies') || '[]');\n\n  if (movies.length === 0) {\n    localStorage.setItem('movies', JSON.stringify([...moviesFromServer]));\n  }\n\n  if (users.length === 0) {\n    localStorage.setItem('users', JSON.stringify([admin, user]));\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/movie_list\" element={<MovieList />} />\n        <Route path=\"/login\" element={<LoginForm />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/add_movie\" element={<AdminAddMovie />} />\n        <Route path=\"/edit_movie_list\" element={<EditPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createStore, AnyAction } from 'redux';\nimport {\n  SET_USER,\n  SET_NEW_MOVIE,\n  CLEAR_NEW_MOVIE,\n  SET_MOVIES_LIST,\n} from './actions';\n\nexport const initialState: RootState = {\n  user: null,\n  newMovies: [],\n  moviesList: [],\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, user: action.payloud };\n\n    case SET_NEW_MOVIE:\n      return { ...state, newMovies: [...state.newMovies, { ...action.payloud }] };\n\n    case SET_MOVIES_LIST:\n      return { ...state, moviesList: [...action.payloud] };\n\n    case CLEAR_NEW_MOVIE:\n      return { ...state, newMovies: [] };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport { App } from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}